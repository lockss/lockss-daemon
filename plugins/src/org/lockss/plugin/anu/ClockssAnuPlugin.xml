<map>
  <entry>
    <string>plugin_status</string>
    <string>ready</string>
  </entry>
  <entry>
    <string>plugin_identifier</string>
    <string>org.lockss.plugin.anu.ClockssAnuPlugin</string>
  </entry>
  <entry>
    <string>plugin_version</string>
    <string>24</string>
  </entry>
  <entry>
    <string>plugin_feature_version_map</string>
    <map>
      <entry>
        <string>Metadata</string>
        <string>5</string>
      </entry>
      <entry>
        <string>Poll</string>
        <string>4</string>
      </entry>
      <entry>
        <string>Substance</string>
        <string>2</string>
      </entry>
    </map>
  </entry>
  <entry>
    <string>plugin_name</string>
    <string>Australian National University Press Journals Plugin (CLOCKSS)</string>
  </entry>
  <entry>
    <string>au_name</string>
    <string>"Australian National University Press Journals Plugin (CLOCKSS), Base URL %s, JID %s, Volume %s", base_url, journal_id, volume_name</string>
  </entry>
  <entry>
    <string>au_start_url</string>
    <!--  6/14/19 - intentional backwards incompatible change -->
    <!-- site changed and redirects + new journal_id did not work; lock down processed content on production and change start_url -->
    <!-- crawl rules still work for legacy content so production content maintenance will be fine -->
    <string>"%spublications/journals/%s", base_url, journal_id</string>
  </entry>
  <entry>
    <string>au_permission_url</string>
    <list>
      <string>"%slockss.txt", base_url</string>
      <string>"https://style.anu.edu.au/lockss.txt"</string>
      <string>"https://press-files.anu.edu.au/lockss.txt"</string>
    </list>
  </entry>
  <entry>
    <!-- the au_permitted_host_pattern must also find match in lockss-daemon config
         org.lockss.crawler.allowedPluginPermittedHosts -->
    <string>au_permitted_host_pattern</string>
    <list>
      <string>(fonts|ajax)\.(googleapis|gstatic)\.com</string>
    </list>
  </entry>
  <entry>
    <string>au_def_new_content_crawl</string>
    <long>1209600000</long>
  </entry>
  <entry>
    <string>au_def_pause_time</string>
    <long>3000</long>
  </entry>
  <entry>
    <!-- start page to landing page, is difficult to determine 
        as the first good link may be on the 3rd page of listings,
        however, daemon may recompute depth so only need to add 1 to depth -->
    <string>au_refetch_depth</string>
    <int>3</int>
  </entry>
  <entry>
    <string>au_crawlrules</string>
    <list>
      <string>1,"^https?://((fonts|ajax)\.(googleapis|gstatic)\.com)/.*\.?(bmp|css|eot|gif|ico|jpe?g|js|otf|png|svg|tif?f|ttf|woff.?)(\?.*)?"</string>
      <string>1,"^https?://(press(-files)?|style)\.anu\.edu\.au/.*\.(bmp|css|eot|gif|ico|jpe?g|js|otf|png|svg|tif?f|ttf|woff.?)$"</string>
      <string>1,"^https?://(press(-files)?|style)\.anu\.edu\.au/lockss.txt$"</string>
      <string>4,"^https?://(press(-files)?|style)\.anu\.edu\.au/"</string>
      <!--  start_url now redirects to version without publications and we need to allow this before next rule -->
      <string>1,"^https?://%s/%s(\?page=[0-9]+)?$", url_host(base_url), journal_id</string>
      <!-- in cases where there is a bad link, seems to redirect to search page, don't follow these links -->
      <string>2,"(^https?://%s/([^/?]+)?$|\?search=|/authors-editors/)", url_host(base_url)</string>
      <!-- start url has publications/ but redirects to version without publications/ now allowed above -->
      <string>1,"^https?://%s%spublications/(journals/)?%s(\?page=[0-9]+)?$", url_host(base_url), url_path(base_url), journal_id</string>
      <string>1,"^https?://%s%s[?]p=[0-9]+$", url_host(base_url), url_path(base_url)</string>
      <string>1,"^https?://%s%snode/[0-9]+(/download)?$", url_host(base_url), url_path(base_url)</string>
      <!-- 6/14/19 - some journals use short jid on TOC link; allow any lower-case-char sequence in this position since the full journal id is also there -->
      <!-- e.g. https://press.anu.edu.au/publications/journals/australian-journal-biography-and-history/ajbh-1 -->
      <!-- e.g. https://press.anu.edu.au/publications/journals/international-review-environmental-history/ireh-volume-5-issue-1-2019 -->
      <!--  and agenda uses short and then long /journals/agenda/agenda-journal-policy... -->
      <string>1,"^https?://%s%spublications/(journals/(%s/)?)?(%s|[a-z-]+)(-(ii-number|issue|volume|no-[1-9]|winter))?-%s(-[12ni][^/]*?)?(/download)?$", url_host(base_url), url_path(base_url), journal_id, journal_id, volume_name</string>
      <string>1,"^https?://press-files\.anu\.edu\.au/downloads/press/[^/]+/(html|media|pdf|epub|mobi)/", base_url</string>
    </list>
  </entry>
  <entry>
    <string>au_substance_url_pattern</string>
    <list>
<!--       <string>"^https?://press-files.anu.edu.au/downloads/press/[^/]+/pdf/book\.pdf"</string> -->
      <string>"^https?://press-files.anu.edu.au/downloads/press/[^/]+/pdf/.+\.pdf"</string>
    </list>
  </entry>
  <entry>
    <string>plugin_config_props</string>
    <list>
      <org.lockss.daemon.ConfigParamDescr>
        <key>base_url</key>
        <displayName>Base URL</displayName>
        <description>Usually of the form http://&lt;journal-name&gt;.com/</description>
        <type>3</type>
        <size>40</size>
        <definitional>true</definitional>
        <defaultOnly>false</defaultOnly>
      </org.lockss.daemon.ConfigParamDescr>
      <org.lockss.daemon.ConfigParamDescr>
        <key>journal_id</key>
        <displayName>Journal Id</displayName>
        <description>Identifier for journal (often used as part of file names)</description>
        <type>1</type>
        <size>100</size>
        <definitional>true</definitional>
        <defaultOnly>false</defaultOnly>
      </org.lockss.daemon.ConfigParamDescr>
      <org.lockss.daemon.ConfigParamDescr>
        <key>volume_name</key>
        <displayName>Volume</displayName>
        <type>1</type>
        <size>40</size>
        <definitional>true</definitional>
        <defaultOnly>false</defaultOnly>
      </org.lockss.daemon.ConfigParamDescr>
    </list>
  </entry>
  <entry>
    <string>au_url_normalizer</string>
    <string>org.lockss.plugin.anu.AnuUrlNormalizer</string>
  </entry>
  <entry>
    <string>text/html_link_extractor_factory</string>
    <string>org.lockss.plugin.anu.AnuHtmlLinkExtractorFactory</string>
  </entry>
  <entry>
    <string>text/html_crawl_filter_factory</string>
    <string>org.lockss.plugin.anu.AnuHtmlCrawlFilterFactory</string>
  </entry>
  <entry>
    <string>text/html_filter_factory</string>
    <string>org.lockss.plugin.anu.AnuHtmlHashFilterFactory</string>
  </entry>
  <entry>
    <string>plugin_article_iterator_factory</string>
    <string>org.lockss.plugin.anu.AnuArticleIteratorFactory</string>
  </entry>
  <entry>
    <string>plugin_article_metadata_extractor_factory</string>
    <string>org.lockss.plugin.anu.AnuArticleIteratorFactory</string>
  </entry>
  <entry>
    <string>text/html_metadata_extractor_factory_map</string>
    <map>
      <entry>
        <string>*;DublinCore</string>
        <string>org.lockss.plugin.anu.AnuHtmlMetadataExtractorFactory</string>
      </entry>
    </map>
  </entry>
  <entry>
    <string>plugin_cache_result_list</string>
    <list>
      <string>403=org.lockss.plugin.anu.AnuHttpResponseHandler</string>
      <string>500=org.lockss.plugin.anu.AnuHttpResponseHandler</string>
    </list>
  </entry>
  <entry>
    <string>au_repair_from_peer_if_missing_url_pattern</string>
    <list>
      <string>.+[.](bmp|css|dfont|eot|gif|ico|jpe?g|js|otf|png|svg|tif?f|ttc|ttf|woff.?)(\?.*)?$"</string>
      <string>https://fonts\.googleapis\.com/css\?</string>
      <string>/html/(banner|frames)\.php</string>
    </list>
  </entry>
  <entry>
    <!-- these will not count towards poll results but will replicate from peer if above -->
    <string>au_url_poll_result_weight</string>
    <list>
      <string>".+[.](bmp|css|dfont|eot|gif|ico|jpe?g|js|otf|png|svg|tif?f|ttc|ttf|woff.?)(\?.*)?$", 0</string>
      <string>"https://fonts\.googleapis\.com/css\?", 0</string>
      <string>"/html/(banner|frames)\.php", 0</string>
    </list>
  </entry>
  <!--  tell the default base.MimeTypeContentValidator what url patterns to validate by mime type -->
  <entry>
    <string>au_url_mime_validation_map</string>
    <list>
      <string>\.pdf$, application/pdf</string>
      <string>node/[0-9]+$, text/html</string>
      <string>downloads/press/[^/]+/html/.+\.x?html, text/html</string>
      <!--  terminating download doesn't appear to exist any more but no harm to leave it in -->
      <string>/download$, text/html</string>
    </list>
  </entry>
</map>