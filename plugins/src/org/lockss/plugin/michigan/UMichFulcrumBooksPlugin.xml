<map>
    <entry>
        <string>plugin_status</string>
        <string>ready</string>
    </entry>
    <entry>
        <string>plugin_identifier</string>
        <string>org.lockss.plugin.michigan.UMichFulcrumBooksPlugin</string>
    </entry>
    <entry>
        <string>plugin_version</string>
        <string>14</string>
    </entry>
    <entry>
        <string>plugin_name</string>
        <string>University of Michigan Press Books Plugin</string>
    </entry>
    <entry>
        <string>au_name</string>
        <string>"University of Michigan Press Books Plugin, Base URL %s, Path %s", base_url, book_uri</string>
    </entry>
    <entry>
        <string>au_start_url</string>
        <string>"%s%s", base_url, book_uri</string>
    </entry>
    <!--  don't currently have one; work around for now -->
    <entry>
        <string>au_permission_url</string>
        <string>"http://clockss-ingest.lockss.org/lockss.txt"</string>
    </entry>
  <entry>
    <string>plugin_feature_version_map</string>
    <map>
      <entry>
        <string>Poll</string>
        <string>1</string>
      </entry>
      <entry>
        <string>Metadata</string>
        <string>2</string>
      </entry>
      <entry>
        <string>Substance</string>
        <string>3</string>
      </entry>
    </map>
  </entry>
    <entry>
        <string>au_def_new_content_crawl</string>
        <long>1209600000</long>
    </entry>
    <entry>
        <string>au_def_pause_time</string>
        <long>3000</long>
    </entry>
    <entry>
        <string>au_crawlrules</string>
        <list>
            <string>1,"^%s[^?]*\.(bmp|css|eot|gif|ico|jpe?g|js|otf|png|svg|tif?f|ttf|woff2?)([?][0-9]+)?$", base_url</string>
            <string>1,"^https?://([^.]+\.cloudfront\.net|(fonts|ajax)\.(googleapis|gstatic)\.com)/"</string>
            <string>2,"^%s%s\.(atom|json|rss)", base_url, book_uri</string>
            <string>2,"^%s%s.*&amp;(sort|per_page|view)=", base_url, book_uri</string>
            <!--  %% is the way to represent a percent in a crawl rule -->
            <string>2,"^%s%s\?f%%5B", base_url, book_uri</string>
            <!--  a strange redundant argument that causes a 503 now normalized-->
            <!-- <string>2,"^https?://%s/%s.*\?utf8=", url_host(base_url), book_uri</string>-->
            <string>1,"^%s%s", base_url, book_uri</string>
            <string>1,"^%s(concern/file_sets|downloads|ebooks|epubs|image-service)/", base_url</string>
        </list>
    </entry>
    <entry>
        <string>au_substance_url_pattern</string>
        <list>
            <!--yes to: https://www.fulcrum.org/downloads/00000070p and no to https://www.fulcrum.org/downloads/00000070p?file=thumbnail -->
            <!-- there is no way to differentiate the book substance from supporting assets -->
            <string>"^%sebooks/[^?/]+/download", base_url</string>
            <!-- A small portion of Au will redirect PDF file-->
            <!--
              No   https://www.fulcrum.org/ebooks/pg15bg380/download
              Redirect chain:
                    https://www.fulcrum.org/ebooks/pg15bg380/download
              No    https://www.fulcrum.org/downloads/pg15bg380
            No   https://www.fulcrum.org/ebooks/vq27zq50v/download
              Redirect chain:
                    https://www.fulcrum.org/ebooks/vq27zq50v/download
              No    https://www.fulcrum.org/downloads/vq27zq50v
            -->
            <string>"^%downloads/[^?/]+", base_url</string>
        </list>
    </entry>
    <entry>
        <string>plugin_config_props</string>
        <list>
            <org.lockss.daemon.ConfigParamDescr>
                <key>base_url</key>
                <displayName>Base URL</displayName>
                <description>Usually of the form http://&lt;journal-name&gt;.com/</description>
                <type>3</type>
                <size>40</size>
                <definitional>true</definitional>
                <defaultOnly>false</defaultOnly>
            </org.lockss.daemon.ConfigParamDescr>
            <org.lockss.daemon.ConfigParamDescr>
                <key>book_uri</key>
                <displayName>Path</displayName>
                <description>Path for book (used as part of file name)</description>
                <type>1</type>
                <size>200</size>
                <definitional>true</definitional>
                <defaultOnly>false</defaultOnly>
            </org.lockss.daemon.ConfigParamDescr>
        </list>
    </entry>
    <entry>
        <string>text/html_filter_factory</string>
        <string>org.lockss.plugin.michigan.UMichHtmlHashFilterFactory</string>
    </entry>
    <entry>
        <string>au_url_normalizer</string>
        <string>org.lockss.plugin.michigan.UMichUrlNormalizer</string>
    </entry>
    <entry>
        <string>text/html_link_extractor_factory</string>
        <string>org.lockss.plugin.michigan.UMichHtmlLinkExtractorFactory</string>
    </entry>
    <entry>
        <string>application/json_link_extractor_factory</string>
        <string>org.lockss.plugin.michigan.IiifJsonLinkExtractorFactory</string>
    </entry>
    <entry>
        <string>application/ld+json_link_extractor_factory</string>
        <string>org.lockss.plugin.michigan.IiifJsonLinkExtractorFactory</string>
    </entry>
    <entry>
        <string>application/json_link_rewriter_factory</string>
        <string>org.lockss.plugin.michigan.UMichJsonLinkRewriterFactory</string>
    </entry>
    <entry>
        <string>application/ld+json_link_rewriter_factory</string>
        <string>org.lockss.plugin.michigan.UMichJsonLinkRewriterFactory</string>
    </entry>
    <entry>
        <string>plugin_article_iterator_factory</string>
        <string>org.lockss.plugin.michigan.UMichBookIteratorFactory</string>
    </entry>
    <entry>
        <string>plugin_article_metadata_extractor_factory</string>
        <string>org.lockss.plugin.michigan.UMichBookIteratorFactory</string>
    </entry>
    <entry>
        <string>text/html_metadata_extractor_factory_map</string>
        <map>
            <entry>
                <string>*;DublinCore</string>
                <string>org.lockss.plugin.michigan.UMichHtmlMetadataExtractorFactory</string>
            </entry>
        </map>
    </entry>
    <entry>
        <string>text/javascript_link_rewriter_factory</string>
        <string>org.lockss.plugin.michigan.UMichJavaScriptLinkRewriterFactory</string>
    </entry>
    <entry>
        <string>au_repair_from_peer_if_missing_url_pattern</string>
        <list>
            <string>.+[.](bmp|css|dfont|eot|gif|ico|jpe?g|js|otf|png|svg|tif?f|ttc|ttf|woff.?)(\?.*)?$"</string>
        </list>
    </entry>
    <entry>
        <!--these will not count towards poll results but will replicate from peer if above-->
        <string>au_url_poll_result_weight</string>
        <list>
            <string>".+[.](bmp|css|dfont|eot|gif|ico|jpe?g|js|otf|png|svg|tif?f|ttc|ttf|woff.?)(\?.*)?$", 0</string>
            <!--  do not replicate, just don't count in poll; it's a frame for the epub viewer and hashes to zero -->
            <string>"^%sepubs/[^/]+$", base_url, 0</string>
        </list>
    </entry>
    <!--  tell the default base.MimeTypeContentValidator what url patterns to validate by mime type -->
    <!--  this won't work - it could be PDF also -->
    <entry>
        <string>au_url_mime_validation_map</string>
        <list>
            <string>/download/, application/epub+zip</string>
        </list>
    </entry>
  <entry>
    <string>au_permitted_host_pattern</string>
    <list>
      <string>www\.fulcrum\.org|[^.]+\.cloudfront\.net|(fonts|ajax)\.(googleapis|gstatic)\.com</string>
    </list>
  </entry>
</map>
