<!--

Copyright (c) 2000-2021, Board of Trustees of Leland Stanford Jr. University
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors
may be used to endorse or promote products derived from this software without
specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

-->
<map>
  <entry>
    <string>plugin_status</string>
    <string>ready</string>
    <!-- https transition enabled -->
  </entry>
  <entry>
    <string>plugin_identifier</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20Plugin</string>
  </entry>
  <entry>
    <string>plugin_name</string>
    <string>HighWire Press Plugin (Legacy H20)</string>
  </entry>
  <entry>
    <string>plugin_version</string>
    <string>132</string>
  </entry>
  <entry>
    <string>plugin_feature_version_map</string>
    <map>
      <entry>
        <string>Substance</string>
        <string>5</string>
      </entry>
      <entry>
        <string>Poll</string>
        <string>47</string>
      </entry>
      <entry>
        <string>Metadata</string>
        <string>11</string>
      </entry>
    </map>
  </entry>
  <entry>
    <string>required_daemon_version</string>
    <string>1.70.0</string>  <!-- HTTP-To-HTTPS -->
  </entry>
  <entry>
    <string>plugin_config_props</string>
    <list>
      <org.lockss.daemon.ConfigParamDescr>
        <key>base_url</key>
        <displayName>Base URL</displayName>
        <description>Usually of the form http://&lt;journal-name&gt;.com/</description>
        <type>3</type>
        <size>40</size>
        <definitional>true</definitional>
        <defaultOnly>false</defaultOnly>
      </org.lockss.daemon.ConfigParamDescr>
      <org.lockss.daemon.ConfigParamDescr>
        <key>volume_name</key>
        <displayName>Volume Name</displayName>
        <type>1</type>
        <size>20</size>
        <definitional>true</definitional>
        <defaultOnly>false</defaultOnly>
      </org.lockss.daemon.ConfigParamDescr>
    </list>
  </entry>
  <entry>
    <string>au_name</string>
    <string>"HighWire Press Plugin (Legacy H20), Base URL %s, Volume %s", base_url, volume_name</string>
  </entry>
  <entry>
    <!--  support http to https conversion -->
    <string>au_start_url</string>
    <list>
      <string>"%slockss-manifest/vol_%s_manifest.dtl", to_http(base_url), volume_name</string>
      <string>"%slockss-manifest/vol_%s_manifest.dtl", to_https(base_url), volume_name</string>
    </list>
  </entry>
  <entry>
    <string>au_feature_urls</string>
    <map>
      <entry>
        <string>au_title</string>
        <string>"%s", base_url</string>
      </entry>
      <entry>
        <string>au_issue</string>
        <string>"%scontent/%s/%s.toc", base_url, volume_name, issue</string>
      </entry>
      <entry>
        <string>au_article</string>
        <map>
          <entry>
            <string>pdf+html;*</string>
            <string>"%scontent/%s/%s/%s.full.pdf+html", base_url, volume_name, issue, article</string>
          </entry>
          <entry>
            <string>pdf</string>
            <string>"%scontent/%s/%s/%s.full.pdf", base_url, volume_name, issue, article</string>
          </entry>
          <entry>
            <string>html</string>
            <string>"%scontent/%s/%s/%s.full", base_url, volume_name, issue, article</string>
          </entry>
        </map>
      </entry>
    </map>
  </entry>
  <entry>
    <string>au_permission_checker_factory</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20PermissionCheckerFactory</string>
  </entry>
  <entry>
    <string>au_crawlrules</string>
    <!-- 
    Do not explicitly include the start_url - unnecessary and it is GLN v CLOCKSS specific
    specific inclusions

    specific exclusions 
      RU4166: exclude oxford supplement author-index pages, e.g.: 
            http://humrep.oxfordjournals.org/content/26/suppl_1.author-index
            http://europace.oxfordjournals.org/content/7/Supplement_1.author-index
      RU4399: exclude rss args until normalizer written, eg. 
            http://jcb.rupress.org/cgi/content/short/195/5/704?rss=1&amp;ssource=mfr
            do not exclude with-ds args like
            http://jcb.rupress.org content/195/1/113.full.pdf+html?with-ds=yes
            turns out not the same content http://jcb.rupress.org content/195/1/113.full.pdf+html
            
     -->
    <list>
      <!-- Do not crawl these variations -->
      <string>2,"^https?://%s/.*[.]cover[.]gif$", url_host(base_url)</string>
      <string>2,"^https?://%s/lookup/(volpage/%s(/[^/]+)?$|suppl/doi)", url_host(base_url), volume_name</string>
      <string>2,"^https?://%s/.*\?tab=(metrics|related|responses)", url_host(base_url)</string>
      <string>2,"^https?://%s/(content|lookup/volpage)/%s/.*(cited-by|patientinform-links|related-urls)=yes", url_host(base_url), volume_name</string>
      <string>2,"^https?://%s/content/%s/.*/href/?$", url_host(base_url), volume_name</string>
      <string>2,"^https?://%s/content/%s/[Ss]uppl(ement)?_[0-9]*[.]author-index$", url_host(base_url), volume_name</string>
      <string>2,"^https?://%s/(cgi/content/short|content)/%s/[^/]+/[^/]+[?&amp;](rss=)", url_host(base_url), volume_name</string>
      <!-- Do not crawl any most-read links -->
      <string>2,"^https?://%s/.*/most-read", url_host(base_url)</string>
      <string>2,"^https?://%s/highwire/filestream/powerpoint/", url_host(base_url)</string>
      <!-- otherwise, all content from CDN -->
      <!--  leaving the allthings.googleapis because the suffix will limit what it collects; normally only fonts|ajax.googleapis to avoid storage.googleapis-->
      <!--  and the plugin permitted hosts is restricted -->
      <string>1,"^https?://.+(cdn[.]mathjax[.]org|[.]googleapis[.]com|(cdn.*|journals)[.]bmj[.]com|[.]cloudfront[.]net|[.]glencoesoftware[.]com)[^?]*[.](css|gif|ico|jpe?g|js)"</string>
      <!-- all fonts, images, resources, css, js, etc. -->
      <string>1,"^https?://%s/[^?]*[.](bmp|gif|ico|jpe?g|png|tif?f|(css|js|eot|svg|ttf|woff)([?].*)?)$", url_host(base_url)</string>
      <string>4,"^https?://%s/", url_host(base_url)</string>
      <string>1,"^https?://%s/(content|lookup/volpage)/%s(/|[.])", url_host(base_url), volume_name</string>
      <string>1,"^https?://%s/(cgi/content/[^/]+/|content/vol)%s/", url_host(base_url), volume_name</string>
      <!-- may want to fix this: http://www.pnas.org/content/108/12/4748.full gets http://www.pnas.org/content/107/16/7347/suppl/DCSupplemental -->
      <string>1,"^https?://%s/[^?]*DC(Supplemental|[0-9])", url_host(base_url)</string>
      <string>1,"^https?://%s/highwire/filestream/", url_host(base_url)</string>
      <!-- Added for eolj, but allows wrong volume manifest page to be crawled -->
      <string>1,"^https?://%s/c?lockss-manifest/[^/.]*vol_[^/._]+_manifest.dtl", url_host(base_url)</string>
      <!-- TOCs made up of searches -->
      <string>1,"^https?://%s/search[?]submit=yes(?=.*&amp;tocsectionid=).*&amp;volume=%s[&amp;|$]", url_host(base_url), volume_name</string>
     </list>
  </entry>
  <entry>
    <string>au_def_new_content_crawl</string>
    <long>1209600000</long>
  </entry>
  <entry>
    <string>text/html_filter_factory</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20HtmlFilterFactory</string>
  </entry>
  <entry>
    <string>text/html_crawl_filter_factory</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20HtmlCrawlFilterFactory</string>
  </entry>
  <!-- remove article-depth-first control
  <entry>
    <string>plugin_crawl_url_comparator_factory</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20CrawlUrlComparatorFactory</string>
  </entry>
  -->
  <entry>
    <string>plugin_crawl_seed_factory</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20CrawlSeedFactory</string>
  </entry>
  <entry>
    <string>plugin_cache_result_list</string>
    <list>
      <string>500=org.lockss.plugin.highwire.HighWirePressH20HttpResponseHandler</string>
      <string>509=org.lockss.plugin.highwire.HighWirePressH20HttpResponseHandler</string>
    </list>
  </entry>
  <entry>
    <string>au_login_page_checker</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20LoginPageChecker</string>
  </entry>
  <entry>
    <string>plugin_fetch_rate_limiter_source</string>
    <string>title_attribute:highwire_crawl_pool:HighWireClassic</string>
  </entry>
  <entry>
    <string>plugin_article_iterator_factory</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20ArticleIteratorFactory</string>
  </entry>
  <!-- don't extract links from XML file - due to some that aren't parseable -->
  <entry>
    <string>application/xml_link_extractor_factory</string>
    <string>org.lockss.plugin.highwire.NullXmlLinkExtractorFactory</string>
  </entry>  
  <entry>
    <string>plugin_article_metadata_extractor_factory</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20ArticleIteratorFactory</string>
  </entry>
  <entry>
    <string>text/html_metadata_extractor_factory_map</string>
    <map>
      <entry>
        <string>*;DublinCore</string>
        <string>org.lockss.plugin.highwire.HighWirePressH20HtmlMetadataExtractorFactory</string>
      </entry>
    </map>
  </entry>
  <entry>
    <string>plugin_url_consumer_factory</string>
    <string>org.lockss.plugin.base.HttpToHttpsUrlConsumerFactory</string>
  </entry>
  <entry>
    <string>plugin_url_fetcher_factory</string>
    <string>org.lockss.plugin.base.HttpToHttpsUrlFetcherFactory</string>
  </entry>
  <entry>
    <string>au_substance_url_pattern</string>
    <map>
      <entry>
        <string>abstracts</string>
        <list>
          <string>"^%scontent/%s/[^?&amp;]+[.](?:abstract|short|citation)$", base_url, volume_name</string>
        </list>
      </entry>
      <entry>
        <string>*</string> <!-- default to fulltext -->
        <list>
          <string>"^%scontent/%s/.*[.](?:body|full([.]pdf([+]html)?)?)$", base_url, volume_name</string>
        </list>
      </entry>
    </map>
  </entry>
  <entry>
    <string>au_url_normalizer</string>
    <string>org.lockss.plugin.highwire.HighWirePressH20UrlNormalizer</string>
  </entry>
  <entry>
    <string>au_def_pause_time</string>
    <long>3000</long>
  </entry>
  <entry>
    <string>au_mime_rate_limiter_map</string>
    <map>
      <entry>
        <string>application/pdf,text/html,application/vnd.ms-powerpoint</string>
        <string>1/3000</string>
      </entry>
    </map>
  </entry>
  <entry>
    <!-- manifest to issue -->
    <string>au_refetch_depth</string>
    <int>2</int>
  </entry>
  <entry>
    <string>content-testing_override</string>
    <map>
      <entry>
        <string>au_http_request_header</string>
        <string>X-Lockss-Source:publisher</string>
      </entry>
    </map>
  </entry>
  <entry>
    <!-- the au_permitted_host_pattern must also find match in lockss-daemon config
         org.lockss.crawler.allowedPluginPermittedHosts -->
    <string>au_permitted_host_pattern</string>
    <list>
      <string>.+\.mathjax\.org</string>
      <string>.+\.cloudfront\.net</string>
      <string>.+\.glencoesoftware\.com</string>
      <string>(fonts|ajax)\.(googleapis|gstatic)\.com</string>
      <string>(cdn.*|journals)\.bmj\.com</string>
    </list>
  </entry>
  <entry>
    <string>au_repair_from_peer_if_missing_url_pattern</string>
    <list>
      <string>[.](css|js)$</string>
      <string>://[^/]+(?!.*/content/)(/[^/]+)+[.](gif|png|jpg)$</string>
      <string>://[^/]+(/shared/img/).*[.](gif|png|jpg)$</string>
      <string>://[^/]+/content/[^?]+[.](full[.]pdf[+]html([?]frame=(header|sidebar))?|long)$</string>
    </list>
  </entry>
  <entry>
    <!-- these will not count towards poll results but will replicate from peer if above -->
    <string>au_url_poll_result_weight</string>
    <list>
      <string>"[.]short$", 0</string>
      <string>"with-ds=yes$", 0</string>
      <string>"[.]figures-only$", 0</string>
      <string>"[.](css|js)$", 0</string>
      <string>"://[^/]+(?!.*/content/)(/[^/]+)+[.](gif|png|jpg)$", 0</string>
      <string>"://[^/]+(/shared/img/).*[.](gif|png|jpg)$", 0</string>
      <string>"/search\?submit=yes(?!(&amp;sortspec=[^&amp;]+)?&amp;tocsectionid=)", 0</string>
      <string>"://[^/]+/content/[^?]+[.](full[.]pdf[+]html([?]frame=(header|sidebar))?|long)$", 0</string>
    </list>
  </entry>
</map>
