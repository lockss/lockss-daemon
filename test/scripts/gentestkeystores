#!/bin/bash

# Regenerate the keystores used to sign test plugin jars
# Must be run from project top dir

testdir=test/src/org/lockss/test
if [[ ! -d "${testdir}" ]]; then
  echo "Must be run from project top dir"
  exit 1
fi
pubstore=public.keystore
passwd="f00bar"

# genkey name alias valid
genkey() {
  local name="$1"
  local alias="$2"
  local valid="$3"
  shift 3
  rm -f "${alias}.keystore"
  keytool -genkeypair -deststoretype pkcs12 -alias "${alias}" -validity "${valid}" -keystore "${alias}.keystore" -storepass "${passwd}" -keypass "${passwd}" -dname CN="${name}, O=Stanford University, OU=LOCKSS Program, L=Palo Alto, S=California, C=US" $@
}

# export pub key of keypair to public keystore
# genkey alias
expkey() {
  local alias="$1"
  shift 1
  keytool -exportcert -keystore "${alias}.keystore" -file "${alias}.cer" -alias "${alias}" -storepass "${passwd}"
  keytool -importcert -keystore "${pubstore}" -alias "${alias}" -file "${alias}.cer" -storepass "${passwd}" -noprompt
  rm "${alias}.cer"
}

rm -f "${pubstore}"
genkey "Good Guy" "goodguy" 3653 
expkey "goodguy"
genkey "Bad Guy" "badguy" 3653
genkey "Good Guy expired" "goodguy-expired" 10 -startdate 2020/01/01
expkey "goodguy-expired"
genkey "Good Guy future" "goodguy-future" 1000 -startdate 2100/01/01
expkey "goodguy-future"

# generate a key, export pub cert to pub keystore, then generate a new
# key with the same alias.  A plugin signed with this key should not
# validate
genkey "Wrong Guy" "wrongguy" 3653
expkey "wrongguy"
rm -f wrongguy.keystore
genkey "Wrong Guy" "wrongguy" 3653

for x in goodguy badguy goodguy-expired goodguy-future wrongguy public; do
  mv "${x}.keystore" "${testdir}"
done
