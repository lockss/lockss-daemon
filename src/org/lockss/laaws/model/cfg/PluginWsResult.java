/*
 * LOCKSS Configuration Service REST API
 * REST API of the LOCKSS Configuration Service
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: lockss-support@lockss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.lockss.laaws.model.cfg;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * The properties of a plugin
 */
@ApiModel(description = "The properties of a plugin")
public class PluginWsResult {

  public static final String SERIALIZED_NAME_PLUGIN_ID = "pluginId";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ID)
  private String pluginId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DEFINITION = "definition";
  @SerializedName(SERIALIZED_NAME_DEFINITION)
  private Map<String, String> definition = new HashMap<>();

  public static final String SERIALIZED_NAME_REGISTRY = "registry";
  @SerializedName(SERIALIZED_NAME_REGISTRY)
  private String registry;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_PUBLISHING_PLATFORM = "publishingPlatform";
  @SerializedName(SERIALIZED_NAME_PUBLISHING_PLATFORM)
  private String publishingPlatform;


  public PluginWsResult pluginId(String pluginId) {

    this.pluginId = pluginId;
    return this;
  }

  /**
   * The identifier of the plugin
   *
   * @return pluginId
   **/

  public String getPluginId() {
    return pluginId;
  }


  public void setPluginId(String pluginId) {
    this.pluginId = pluginId;
  }


  public PluginWsResult name(String name) {

    this.name = name;
    return this;
  }

  /**
   * The name of the plugin
   *
   * @return name
   **/

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PluginWsResult version(String version) {

    this.version = version;
    return this;
  }

  /**
   * The version of the plugin
   *
   * @return version
   **/

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public PluginWsResult type(String type) {

    this.type = type;
    return this;
  }

  /**
   * The type of the plugin
   *
   * @return type
   **/

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public PluginWsResult definition(Map<String, String> definition) {

    this.definition = definition;
    return this;
  }

  public PluginWsResult putDefinitionItem(String key, String definitionItem) {
    this.definition.put(key, definitionItem);
    return this;
  }

  /**
   * The map of plugin definition properties
   *
   * @return definition
   **/

  public Map<String, String> getDefinition() {
    return definition;
  }


  public void setDefinition(Map<String, String> definition) {
    this.definition = definition;
  }


  public PluginWsResult registry(String registry) {

    this.registry = registry;
    return this;
  }

  /**
   * The registry of the plugin
   *
   * @return registry
   **/

  public String getRegistry() {
    return registry;
  }


  public void setRegistry(String registry) {
    this.registry = registry;
  }


  public PluginWsResult url(String url) {

    this.url = url;
    return this;
  }

  /**
   * The URL of the plugin
   *
   * @return url
   **/
  @ApiModelProperty(required = true, value = "The URL of the plugin")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public PluginWsResult publishingPlatform(String publishingPlatform) {

    this.publishingPlatform = publishingPlatform;
    return this;
  }

  /**
   * The publishing platform of the plugin
   *
   * @return publishingPlatform
   **/
  @ApiModelProperty(required = true, value = "The publishing platform of the plugin")

  public String getPublishingPlatform() {
    return publishingPlatform;
  }


  public void setPublishingPlatform(String publishingPlatform) {
    this.publishingPlatform = publishingPlatform;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PluginWsResult pluginWsResult = (PluginWsResult) o;
    return Objects.equals(this.pluginId, pluginWsResult.pluginId) &&
      Objects.equals(this.name, pluginWsResult.name) &&
      Objects.equals(this.version, pluginWsResult.version) &&
      Objects.equals(this.type, pluginWsResult.type) &&
      Objects.equals(this.definition, pluginWsResult.definition) &&
      Objects.equals(this.registry, pluginWsResult.registry) &&
      Objects.equals(this.url, pluginWsResult.url) &&
      Objects.equals(this.publishingPlatform, pluginWsResult.publishingPlatform);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pluginId, name, version, type, definition, registry, url,
      publishingPlatform);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PluginWsResult {\n");
    sb.append("    pluginId: ").append(toIndentedString(pluginId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    registry: ").append(toIndentedString(registry)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    publishingPlatform: ").append(toIndentedString(publishingPlatform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

