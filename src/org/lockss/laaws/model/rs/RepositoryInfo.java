/*
 * 2022, Board of Trustees of Leland Stanford Jr. University,
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation and/or
 * other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * LOCKSS Repository Service REST API
 * REST API of the LOCKSS Repository Service
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: lockss-support@lockss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.lockss.laaws.model.rs;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import java.util.Objects;

/** Information about the repository */
@ApiModel(description = "Information about the repository")
@javax.annotation.
Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RepositoryInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_STORE_INFO = "storeInfo";
  @SerializedName(SERIALIZED_NAME_STORE_INFO) private StorageInfo storeInfo;

  public static final String SERIALIZED_NAME_INDEX_INFO = "indexInfo";
  @SerializedName(SERIALIZED_NAME_INDEX_INFO) private StorageInfo indexInfo;

  public RepositoryInfo() {}

  public RepositoryInfo storeInfo(StorageInfo storeInfo) {

    this.storeInfo = storeInfo;
    return this;
  }

  /**
   * Get storeInfo
   *
   * @return storeInfo
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public StorageInfo getStoreInfo() {
    return storeInfo;
  }

  public void setStoreInfo(StorageInfo storeInfo) {
    this.storeInfo = storeInfo;
  }

  public RepositoryInfo indexInfo(StorageInfo indexInfo) {

    this.indexInfo = indexInfo;
    return this;
  }

  /**
   * Get indexInfo
   *
   * @return indexInfo
   */
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public StorageInfo getIndexInfo() {
    return indexInfo;
  }

  public void setIndexInfo(StorageInfo indexInfo) {
    this.indexInfo = indexInfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepositoryInfo repositoryInfo = (RepositoryInfo)o;
    return Objects.equals(this.storeInfo, repositoryInfo.storeInfo)
        && Objects.equals(this.indexInfo, repositoryInfo.indexInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storeInfo, indexInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepositoryInfo {\n");
    sb.append("    storeInfo: ")
        .append(toIndentedString(storeInfo))
        .append("\n");
    sb.append("    indexInfo: ")
        .append(toIndentedString(indexInfo))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
