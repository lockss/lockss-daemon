/*
 * LOCKSS Repository Service REST API
 * REST API of the LOCKSS Repository Service
 *
 * OpenAPI spec version: 2.0.0
 * Contact: lockss-support@lockss.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.lockss.laaws.model.rs;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Artifact
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-17T14:50:09.666-07:00[America/Los_Angeles]")
public class Artifact {
  @SerializedName("id")
  private String id = null;

  @SerializedName("collection")
  private String collection = null;

  @SerializedName("auid")
  private String auid = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("version")
  private Integer version = null;

  @SerializedName("committed")
  private Boolean committed = null;

  @SerializedName("storageUrl")
  private String storageUrl = null;

  @SerializedName("originDate")
  private Long originDate = null;

  @SerializedName("collectionDate")
  private Long collectionDate = null;

  public Artifact id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Artifact collection(String collection) {
    this.collection = collection;
    return this;
  }

   /**
   * Get collection
   * @return collection
  **/
  @Schema(description = "")
  public String getCollection() {
    return collection;
  }

  public void setCollection(String collection) {
    this.collection = collection;
  }

  public Artifact auid(String auid) {
    this.auid = auid;
    return this;
  }

   /**
   * Get auid
   * @return auid
  **/
  @Schema(description = "")
  public String getAuid() {
    return auid;
  }

  public void setAuid(String auid) {
    this.auid = auid;
  }

  public Artifact uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @Schema(description = "")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public Artifact version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public Artifact committed(Boolean committed) {
    this.committed = committed;
    return this;
  }

   /**
   * Get committed
   * @return committed
  **/
  @Schema(description = "")
  public Boolean isCommitted() {
    return committed;
  }

  public void setCommitted(Boolean committed) {
    this.committed = committed;
  }

  public Artifact storageUrl(String storageUrl) {
    this.storageUrl = storageUrl;
    return this;
  }

   /**
   * Get storageUrl
   * @return storageUrl
  **/
  @Schema(description = "")
  public String getStorageUrl() {
    return storageUrl;
  }

  public void setStorageUrl(String storageUrl) {
    this.storageUrl = storageUrl;
  }

  public Artifact originDate(Long originDate) {
    this.originDate = originDate;
    return this;
  }

   /**
   * Get originDate
   * @return originDate
  **/
  @Schema(description = "")
  public Long getOriginDate() {
    return originDate;
  }

  public void setOriginDate(Long originDate) {
    this.originDate = originDate;
  }

  public Artifact collectionDate(Long collectionDate) {
    this.collectionDate = collectionDate;
    return this;
  }

   /**
   * Get collectionDate
   * @return collectionDate
  **/
  @Schema(description = "")
  public Long getCollectionDate() {
    return collectionDate;
  }

  public void setCollectionDate(Long collectionDate) {
    this.collectionDate = collectionDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Artifact artifact = (Artifact) o;
    return Objects.equals(this.id, artifact.id) &&
        Objects.equals(this.collection, artifact.collection) &&
        Objects.equals(this.auid, artifact.auid) &&
        Objects.equals(this.uri, artifact.uri) &&
        Objects.equals(this.version, artifact.version) &&
        Objects.equals(this.committed, artifact.committed) &&
        Objects.equals(this.storageUrl, artifact.storageUrl) &&
        Objects.equals(this.originDate, artifact.originDate) &&
        Objects.equals(this.collectionDate, artifact.collectionDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, collection, auid, uri, version, committed, storageUrl, originDate, collectionDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Artifact {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    collection: ").append(toIndentedString(collection)).append("\n");
    sb.append("    auid: ").append(toIndentedString(auid)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    committed: ").append(toIndentedString(committed)).append("\n");
    sb.append("    storageUrl: ").append(toIndentedString(storageUrl)).append("\n");
    sb.append("    originDate: ").append(toIndentedString(originDate)).append("\n");
    sb.append("    collectionDate: ").append(toIndentedString(collectionDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
