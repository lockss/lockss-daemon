/*
 * Copyright (c) 2000-2022, Board of Trustees of Leland Stanford Jr. University
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
*/

/*
 * LOCKSS Repository Service REST API
 * REST API of the LOCKSS Repository Service
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: lockss-support@lockss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.lockss.laaws.model.rs;

import java.util.Map;
import java.util.Objects;

import javax.ws.rs.core.GenericType;

// import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Abstract class for oneOf,anyOf schemas defined in OpenAPI spec
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public abstract class AbstractOpenApiSchema {
  // store the actual instance of the schema/object
  private Object instance;

  // is nullable
  private Boolean isNullable;

  // schema type (e.g. oneOf, anyOf)
  private final String schemaType;

  public AbstractOpenApiSchema(String schemaType, Boolean isNullable) {
    this.schemaType = schemaType;
    this.isNullable = isNullable;
  }

  /**
   * Get the list of oneOf/anyOf composed schemas allowed to be stored in this object
   *
   * @return an instance of the actual schema/object
   */
  public abstract Map<String, GenericType> getSchemas();

  /**
   * Get the actual instance
   *
   * @return an instance of the actual schema/object
   */
  //@JsonValue
  public Object getActualInstance() {
    return instance;
  }

  /**
   * Set the actual instance
   *
   * @param instance the actual instance of the schema/object
   */
  public void setActualInstance(Object instance) {
    this.instance = instance;
  }

  /**
   * Get the instant recursively when the schemas defined in oneOf/anyof happen to be oneOf/anyOf
   * schema as well
   *
   * @return an instance of the actual schema/object
   */
  public Object getActualInstanceRecursively() {
    return getActualInstanceRecursively(this);
  }

  private Object getActualInstanceRecursively(AbstractOpenApiSchema object) {
    if (object.getActualInstance() == null) {
      return null;
    } else if (object.getActualInstance() instanceof AbstractOpenApiSchema) {
      return getActualInstanceRecursively((AbstractOpenApiSchema) object.getActualInstance());
    } else {
      return object.getActualInstance();
    }
  }

  /**
   * Get the schema type (e.g. anyOf, oneOf)
   *
   * @return the schema type
   */
  public String getSchemaType() {
    return schemaType;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ").append(getClass()).append(" {\n");
    sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
    sb.append("    isNullable: ").append(toIndentedString(isNullable)).append("\n");
    sb.append("    schemaType: ").append(toIndentedString(schemaType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbstractOpenApiSchema a = (AbstractOpenApiSchema) o;
    return Objects.equals(this.instance, a.instance)
        && Objects.equals(this.isNullable, a.isNullable)
        && Objects.equals(this.schemaType, a.schemaType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instance, isNullable, schemaType);
  }

  /**
   * Is nullable
   *
   * @return true if it's nullable
   */
  public Boolean isNullable() {
    if (Boolean.TRUE.equals(isNullable)) {
      return Boolean.TRUE;
    } else {
      return Boolean.FALSE;
    }
  }
}
