/*
 * LOCKSS Repository Service REST API
 * REST API of the LOCKSS Repository Service
 *
 * OpenAPI spec version: 2.0.0
 * Contact: lockss-support@lockss.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.lockss.laaws.model.rs;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about a repository storage area
 */
@Schema(description = "Information about a repository storage area")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-17T14:50:09.666-07:00[America/Los_Angeles]")
public class StorageInfo {
  @SerializedName("type")
  private String type = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("used")
  private Long used = null;

  @SerializedName("avail")
  private Long avail = null;

  @SerializedName("percentUsedString")
  private String percentUsedString = null;

  @SerializedName("percentUsed")
  private Double percentUsed = null;

  public StorageInfo type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the storage area
   * @return type
  **/
  @Schema(required = true, description = "Type of the storage area")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public StorageInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the storage area
   * @return name
  **/
  @Schema(required = true, description = "Name of the storage area")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public StorageInfo size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Size in bytes of the storage area
   * @return size
  **/
  @Schema(required = true, description = "Size in bytes of the storage area")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public StorageInfo used(Long used) {
    this.used = used;
    return this;
  }

   /**
   * Used size in bytes of the torage area
   * @return used
  **/
  @Schema(required = true, description = "Used size in bytes of the torage area")
  public Long getUsed() {
    return used;
  }

  public void setUsed(Long used) {
    this.used = used;
  }

  public StorageInfo avail(Long avail) {
    this.avail = avail;
    return this;
  }

   /**
   * Available size in bytes of the storage area
   * @return avail
  **/
  @Schema(required = true, description = "Available size in bytes of the storage area")
  public Long getAvail() {
    return avail;
  }

  public void setAvail(Long avail) {
    this.avail = avail;
  }

  public StorageInfo percentUsedString(String percentUsedString) {
    this.percentUsedString = percentUsedString;
    return this;
  }

   /**
   * Percentage of size used, formatted as a string
   * @return percentUsedString
  **/
  @Schema(required = true, description = "Percentage of size used, formatted as a string")
  public String getPercentUsedString() {
    return percentUsedString;
  }

  public void setPercentUsedString(String percentUsedString) {
    this.percentUsedString = percentUsedString;
  }

  public StorageInfo percentUsed(Double percentUsed) {
    this.percentUsed = percentUsed;
    return this;
  }

   /**
   * Percentage of size used
   * @return percentUsed
  **/
  @Schema(required = true, description = "Percentage of size used")
  public Double getPercentUsed() {
    return percentUsed;
  }

  public void setPercentUsed(Double percentUsed) {
    this.percentUsed = percentUsed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageInfo storageInfo = (StorageInfo) o;
    return Objects.equals(this.type, storageInfo.type) &&
        Objects.equals(this.name, storageInfo.name) &&
        Objects.equals(this.size, storageInfo.size) &&
        Objects.equals(this.used, storageInfo.used) &&
        Objects.equals(this.avail, storageInfo.avail) &&
        Objects.equals(this.percentUsedString, storageInfo.percentUsedString) &&
        Objects.equals(this.percentUsed, storageInfo.percentUsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, size, used, avail, percentUsedString, percentUsed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageInfo {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("    avail: ").append(toIndentedString(avail)).append("\n");
    sb.append("    percentUsedString: ").append(toIndentedString(percentUsedString)).append("\n");
    sb.append("    percentUsed: ").append(toIndentedString(percentUsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
